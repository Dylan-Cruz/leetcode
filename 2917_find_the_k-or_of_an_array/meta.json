{
    "name": "Find the K-or of an Array",
    "number": "2917",
    "url": "https://leetcode.com/problems/find-the-k-or-of-an-array/description/",
    "difficulty": "Easy",
    "topics": [
        "Array",
        "Bit Manipulation"
    ],
    "description_html": "<p>You are given an integer array <code>nums</code>, and an integer <code>k</code>. Let's introduce&nbsp;<strong>K-or</strong> operation by extending the standard bitwise OR. In K-or, a bit position in the result is set to <code>1</code>&nbsp;if at least <code>k</code> numbers in <code>nums</code> have a <code>1</code> in that position.</p>\n\n<p>Return <em>the K-or of</em> <code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1: </strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: 0.875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input:</strong><span class=\"example-io\" style=\"font-family: Menlo, sans-serif; font-size: 0.85rem;\"> nums = [7,12,9,8,9,15], k = 4 </span></p>\n\n<p><strong>Output:</strong><span class=\"example-io\" style=\"font-family: Menlo, sans-serif; font-size: 0.85rem;\"> 9 </span></p>\n\n<p><strong>Explanation: </strong></p>\n\n<p>Represent numbers in binary:</p>\n\n<table><tbody><tr><th><b>Number</b></th><th>Bit 3</th><th>Bit 2</th><th>Bit 1</th><th>Bit 0</th></tr><tr><td><b>7</b></td><td>0</td><td>1</td><td>1</td><td>1</td></tr><tr><td><b>12</b></td><td>1</td><td>1</td><td>0</td><td>0</td></tr><tr><td><b>9</b></td><td>1</td><td>0</td><td>0</td><td>1</td></tr><tr><td><b>8</b></td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td><b>9</b></td><td>1</td><td>0</td><td>0</td><td>1</td></tr><tr><td><b>15</b></td><td>1</td><td>1</td><td>1</td><td>1</td></tr><tr><td><b>Result = 9</b></td><td>1</td><td>0</td><td>0</td><td>1</td></tr></tbody></table>\n\n<p>Bit 0 is set in 7, 9, 9, and 15. Bit 3 is set in 12, 9, 8, 9, and 15.<br>\nOnly bits 0 and 3 qualify. The result is <code>(1001)<sub>2</sub> = 9</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2: </strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: 0.875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input:</strong><span class=\"example-io\" style=\"font-family: Menlo, sans-serif; font-size: 0.85rem;\"> nums = [2,12,1,11,4,5], k = 6 </span></p>\n\n<p><strong>Output:</strong><span class=\"example-io\" style=\"font-family: Menlo, sans-serif; font-size: 0.85rem;\"> 0 </span></p>\n\n<p><strong>Explanation:&nbsp;</strong>No bit appears as 1 in all six array numbers, as required for K-or with <code>k = 6</code>. Thus, the result is 0.</p>\n</div>\n\n<p><strong class=\"example\">Example 3: </strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: 0.875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input:</strong><span class=\"example-io\" style=\"font-family: Menlo, sans-serif; font-size: 0.85rem;\"> nums = [10,8,5,9,11,6,8], k = 1 </span></p>\n\n<p><strong>Output:</strong><span class=\"example-io\" style=\"font-family: Menlo, sans-serif; font-size: 0.85rem;\"> 15 </span></p>\n\n<p><strong>Explanation: </strong> Since <code>k == 1</code>, the 1-or of the array is equal to the bitwise OR of all its elements. Hence, the answer is <code>10 OR 8 OR 5 OR 9 OR 11 OR 6 OR 8 = 15</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 50</code></li>\n\t<li><code>0 &lt;= nums[i] &lt; 2<sup>31</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= nums.length</code></li>\n</ul>\n",
    "description_markdown": "You are given an integer array `nums`, and an integer `k`. Let's introduce\u00a0**K-or** operation by extending the standard bitwise OR. In K-or, a bit position in the result is set to `1`\u00a0if at least `k` numbers in `nums` have a `1` in that position.\n\n\nReturn *the K-or of* `nums`.\n\n\n\u00a0\n\n\n**Example 1:** \n\n\n\n**Input:** nums = [7,12,9,8,9,15], k = 4 \n\n\n**Output:** 9 \n\n\n**Explanation:** \n\n\nRepresent numbers in binary:\n\n\n\n\n| **Number** | Bit 3 | Bit 2 | Bit 1 | Bit 0 |\n| --- | --- | --- | --- | --- |\n| **7** | 0 | 1 | 1 | 1 |\n| **12** | 1 | 1 | 0 | 0 |\n| **9** | 1 | 0 | 0 | 1 |\n| **8** | 1 | 0 | 0 | 0 |\n| **9** | 1 | 0 | 0 | 1 |\n| **15** | 1 | 1 | 1 | 1 |\n| **Result = 9** | 1 | 0 | 0 | 1 |\n\n\nBit 0 is set in 7, 9, 9, and 15. Bit 3 is set in 12, 9, 8, 9, and 15.  \n\nOnly bits 0 and 3 qualify. The result is `(1001)2 = 9`.\n\n\n\n**Example 2:** \n\n\n\n**Input:** nums = [2,12,1,11,4,5], k = 6 \n\n\n**Output:** 0 \n\n\n**Explanation:**No bit appears as 1 in all six array numbers, as required for K-or with `k = 6`. Thus, the result is 0.\n\n\n\n**Example 3:** \n\n\n\n**Input:** nums = [10,8,5,9,11,6,8], k = 1 \n\n\n**Output:** 15 \n\n\n**Explanation:**  Since `k == 1`, the 1-or of the array is equal to the bitwise OR of all its elements. Hence, the answer is `10 OR 8 OR 5 OR 9 OR 11 OR 6 OR 8 = 15`.\n\n\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `1 <= nums.length <= 50`\n* `0 <= nums[i] < 231`\n* `1 <= k <= nums.length`\n\n\n",
    "solution_stub": "class Solution:\n    def findKOr(self, nums: List[int], k: int) -> int:\n        "
}