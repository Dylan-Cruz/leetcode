{
    "name": "Remove Linked List Elements",
    "number": "203",
    "url": "https://leetcode.com/problems/remove-linked-list-elements/description/",
    "difficulty": "Easy",
    "topics": [
        "Linked List",
        "Recursion"
    ],
    "description_html": "<p>Given the <code>head</code> of a linked list and an integer <code>val</code>, remove all the nodes of the linked list that has <code>Node.val == val</code>, and return <em>the new head</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg\" style=\"width: 500px; height: 142px;\">\n<pre><strong>Input:</strong> head = [1,2,6,3,4,5,6], val = 6\n<strong>Output:</strong> [1,2,3,4,5]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> head = [], val = 1\n<strong>Output:</strong> []\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> head = [7,7,7,7], val = 7\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 50</code></li>\n\t<li><code>0 &lt;= val &lt;= 50</code></li>\n</ul>\n",
    "description_markdown": "Given the `head` of a linked list and an integer `val`, remove all the nodes of the linked list that has `Node.val == val`, and return *the new head*.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n![](https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg)\n\n```\n**Input:** head = [1,2,6,3,4,5,6], val = 6\n**Output:** [1,2,3,4,5]\n\n```\n\n**Example 2:**\n\n\n\n```\n**Input:** head = [], val = 1\n**Output:** []\n\n```\n\n**Example 3:**\n\n\n\n```\n**Input:** head = [7,7,7,7], val = 7\n**Output:** []\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* The number of nodes in the list is in the range `[0, 104]`.\n* `1 <= Node.val <= 50`\n* `0 <= val <= 50`\n\n\n",
    "solution_stub": "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def removeElements(self, head: Optional[ListNode], val: int) -> Optional[ListNode]:\n        "
}